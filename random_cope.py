from telegram import ParseMode, Update
from telegram.ext import Updater, CommandHandler
import random
import redis_db
from utils import in_whitelist
import logging
from time import sleep
from main import getDict, DICTIONARY_HASH, GIF_PREFIX, STICKER_PREFIX
from opinion import opinion

logger = logging.getLogger(__name__)
r = redis_db.connect()

def random_cope(update: Update, context):
    if (not in_whitelist(update)):
        return
    options = [1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33]
    weights = [100, 100, 100, 100, 60, 0.1, 100, 4, 50, 15, 3, 3, 40, 15, 20, 1, 6, 6, 6, 1.5, 1.5, 35, 20, 90, 50, 90, 100, 12, 1, 0.5, 0.5, 0.5, 0.5]
    res = random.choices(options, weights=weights)[0]
    logger.info(f"[cope] res {res}")
    if res == 1:
        update.message.reply_text(f"–ù–∞–π—Å –∫–æ—É–ø–∏—à—å", quote=False)
    elif res == 2:
        update.message.reply_text(f"–ö–æ—É–ø –∂–∏–¥–µ–Ω—å–∫–∏–π", quote=False)
    elif res == 3:
        update.message.reply_text(f"–ö–æ—É–ø —Ö–æ—Ä–æ—à–∏–π\n–ó–¥–æ—Ä–æ–≤–æ –ø–æ–∫–æ—É–ø–∏–ª", quote=False)
    elif res == 4:
        update.message.reply_text(f"–ö–æ—É–ø –ø–ª–æ—Ö–æ–π\n–ö–æ—É–ø–∏ –ª—É—á—à–µ", quote=False)
    elif res == 5:
        update.message.reply_text(f"–ö–æ—É–ø –æ—Ç–≤—Ä–∞—Ç–∏—Ç–µ–ª—å–Ω—ã–π", quote=False)
    elif res == 6:
        update.message.reply_text(f"=== –õ–ï–ì–ï–ù–î–ê–†–ù–´–ô –ö–û–£–ü ===\n–≠—Ç–æ—Ç –∫–æ—É–ø –≤–æ–π–¥–µ—Ç –≤ –∏—Å—Ç–æ—Ä–∏—é!\n–ü–æ–∑–¥—Ä–∞–≤–ª—è–µ–º @{update.message.from_user.username} —Å –ø–æ–ª—É—á–µ–Ω–∏–µ–º —ç—Ç–æ–≥–æ –Ω–µ–≤–µ—Ä–æ—è—Ç–Ω–æ–≥–æ —Ä–µ–¥–∫–æ–≥–æ –∫–æ—É–ø–∞", quote=False)
    elif res == 7:
        update.message.reply_text(f"–ö–æ—É–ø —Å–ª–∞–±—ã–π\n–ö–æ—É–ø–∏ —Å–∏–ª—å–Ω–µ–µ", quote=False)
    elif res == 8:
        update.message.reply_text(f"–¢–∞—Ä–∏—Ñ –ì–∏–≥–∞–∫–æ—É–ø–∏—â–µ\n–ë–µ–∑–ª–∏–º–∏—Ç–Ω—ã–π –∫–æ—É–ø –ø–æ –≤—Å–µ–π –†–æ—Å—Å–∏–∏", quote=False)
    elif res == 9:
        update.message.reply_text(f"–õ—é—Ç–µ–π—à–∏–π –∫–æ—É–ø", quote=False)
    elif res == 10:
        update.message.reply_text(f"–£–¥–∞—á–Ω—ã–π –∫–æ—É–ø!\n–ú–æ–∂–µ—à—å –µ—â–µ —Ä–∞–∑ –ø–æ–∫–æ—É–ø–∏—Ç—å", quote=False)
    elif res == 11:
        update.message.reply_text(f"–≠—Ç–æ—Ç –±–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–π –∫–æ—É–ø –Ω–∞—Å—Ç–æ–ª—å–∫–æ —Å–∏–ª–µ–Ω, —á—Ç–æ —Å–ø–æ—Å–æ–±–µ–Ω –∏–∑–ª—É—á–∞—Ç—å –∞—É—Ä—É –¥–æ–±—Ä–∞ –∏ –ø–æ–∑–∏—Ç–∏–≤–∞, –∫–æ—Ç–æ—Ä–∞—è —É–≤–µ–ª–∏—á–∏–≤–∞–µ—Ç —Å–∏–ª—É –∫–æ—É–ø–∞ –¥—Ä—É–∑–µ–π –Ω–∞ 50%", quote=False)
    elif res == 12:
        update.message.reply_text(f"–í—ã–±–∏—Ä–∞–µ–º –≥–ª–∞–≤–Ω–æ–≥–æ –∫–æ—É–ø–µ—Ä–∞ –¥–Ω—è", quote=False)
        sleep(1.5)
        update.message.reply_text(random.choice(["–•–º–º...", "–¢–∞–∫-—Ç–∞–∫-—Ç–∞–∫...", "–†–∞—Å—à–∏—Ñ—Ä–æ–≤—ã–≤–∞—é —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã...", "–°–ø—Ä–∞—à–∏–≤–∞–µ–º –º–Ω–µ–Ω–∏—è —ç–∫—Å–ø–µ—Ä—Ç–æ–≤...", "–î–∞–π—Ç–µ –ø–æ–¥—É–º–∞—Ç—å..."]), quote=False)
        sleep(1.5)
        update.message.reply_text(f"–ê –≤–æ—Ç –∏ –ø–æ–±–µ–¥–∏—Ç–µ–ª—å - @{update.message.from_user.username}!", quote=False)
    elif res == 13:
        update.message.reply_text(f"–ö–∞–∫ –∂–µ –æ–Ω —Å–∏–ª—å–Ω–æ –∫–æ—É–ø–∏—Ç...\n–ü–∞—Ä–µ–Ω—å –ø–æ–ª–µ–≥—á–µ!", quote=False)
    elif res == 14:
        update.message.reply_text(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏ –ø–ª–æ—Ö–æ–π –∫–æ—É–ø!\n–£ —Ç–µ–±—è –≤–µ—Å—å –¥–µ–Ω—å –±—É–¥–µ—Ç –§–û–ú–û", quote=False)
    elif res == 15:
        update.message.reply_text(f"–û—Ç–ª–∏—á–Ω—ã–π –∫–æ—É–ø!\n–í—Å–µ –ø—Ä–æ–±–ª–µ–º—ã —Ä–µ—à–µ–Ω—ã", quote=False)
    elif res == 16:
        update.message.reply_text(f"–®–µ–¥–µ–≤—Ä–∞–ª—å–Ω—ã–π –∫–æ—É–ø!\n–û –Ω–µ–º –Ω–∞–ø–∏—à—É—Ç –≤ –∫–Ω–∏–≥–∞—Ö", quote=False)
    elif res == 17:
        update.message.reply_text(f"–Ø –Ω–µ –≤–∏–∂—É –≤–∞—à–µ–≥–æ –∫–æ—É–ø–∞", quote=False)
    elif res == 18:
        values = list(r.hgetall(DICTIONARY_HASH).values())
        values = [val for val in values if val.startswith(STICKER_PREFIX)]
        if len(values) == 0:
            update.message.reply_animation("CgACAgQAAx0CT_IhJQABBXMmY7qlHgn9TsIE04UL3TKhfZGCmOgAAmIDAAJ43PVSPgZ0f8U9qU4tBA", quote=False)
            return
        random.shuffle(values)
        file_id = values[0][len(STICKER_PREFIX):]
        logger.info(f"fileid {file_id}")
        update.message.reply_sticker(file_id, quote=False)
    elif res == 19:
        values = list(r.hgetall(DICTIONARY_HASH).values())
        values = [val for val in values if val.startswith(GIF_PREFIX)]
        if len(values) == 0:
            update.message.reply_animation("CgACAgQAAx0CT_IhJQABBXMmY7qlHgn9TsIE04UL3TKhfZGCmOgAAmIDAAJ43PVSPgZ0f8U9qU4tBA", quote=False)
            return
        random.shuffle(values)
        file_id = values[0][len(GIF_PREFIX):]
        logger.info(f"fileid {file_id}")
        update.message.reply_animation(file_id, quote=False)
    elif res == 20:
        update.message.reply_text(f"–ö—Ç–æ-—Ç–æ —Å–æ–º–Ω–µ–≤–∞–µ—Ç—Å—è –≤ —Ç–≤–æ–µ–º –∫–æ—É–ø–µ? –í—ã–∑–æ–≤–∏ –µ–≥–æ –Ω–∞ –¥—É—ç–ª—å –≤ /rockpaperscissors –∏ –ø–æ—Å–º–æ—Ç—Ä–∏ —á–µ–π –∫–æ—É–ø –ø–æ–±–µ–¥–∏—Ç!", quote=False)
    elif res == 21:
        update.message.reply_text(f"–ö—Ç–æ-—Ç–æ —Å–æ–º–Ω–µ–≤–∞–µ—Ç—Å—è –≤ —Ç–≤–æ–µ–º –∫–æ—É–ø–µ? –í—ã–∑–æ–≤–∏ –µ–≥–æ –Ω–∞ –¥—É—ç–ª—å –≤ /connectfour –∏ –ø–æ—Å–º–æ—Ç—Ä–∏ —á–µ–π –∫–æ—É–ø –ø–æ–±–µ–¥–∏—Ç!", quote=False)
    elif res == 22:
        keys = list(r.hgetall(DICTIONARY_HASH).keys())
        keys = [key for key in keys if key.lower().startswith("–∫–æ—É–ø")]
        if len(keys) == 0:
            update.message.reply_animation("CgACAgQAAx0CT_IhJQABBXMmY7qlHgn9TsIE04UL3TKhfZGCmOgAAmIDAAJ43PVSPgZ0f8U9qU4tBA", quote=False)
            return
        random.shuffle(keys)
        key = keys[0]
        update.message.reply_text(f"/get {key}", quote=False)
        sleep(0.5)
        logger.info(f"cope get {key}")
        update.message.text = f"/get {key}"
        getDict(update, context)
    elif res == 23:
        opinion(update, context, "–∫–æ—É–ø")
    elif res == 24:
        update.message.reply_text(f"–û—Ü–µ–Ω–∏–≤–∞–µ–º —Å–∏–ª—É –∫–æ—É–ø–∞ –æ—Ç 1 –¥–æ 6", quote=False)
        sleep(0.5)
        update.message.reply_dice(quote=False)
    elif res == 25:
        # Cope harder sir
        update.message.reply_animation("CgACAgQAAx0CT_IhJQABBXMmY7qlHgn9TsIE04UL3TKhfZGCmOgAAmIDAAJ43PVSPgZ0f8U9qU4tBA", quote=False)
    elif res == 26:
        update.message.reply_text(f"–í—Ä–∞—Ç—å –Ω–µ –±—É–¥—É, –∫–æ—É–ø –Ω–µ –≤–ø–µ—á–∞—Ç–ª–∏–ª", quote=False)
    elif res == 27:
        update.message.reply_text(f"–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω—ã–π –∫–æ—É–ø", quote=False)
    elif res == 28:
        update.message.reply_text(f"–í–∑–æ—Ä–≤–∞–Ω–Ω—ã–π –∫–æ—É–ø!", quote=False)
    elif res == 29:
        update.message.reply_text(f"–•–æ—Ä–æ—à –∫–æ—É–ø–∏—Ç—å, –ø–æ–≥–Ω–∞–ª–∏ –ª—É—á—à–µ –≤ –∫–∞–∑–∏–Ω—ã—á!\n–ó–∞–æ–¥–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ö–æ—Ä–æ—à–æ —Ç–≤–æ–π –∫–æ—É–ø —Å–º–æ–∂–µ—Ç –≤—ã–±–∏—Ç—å –Ω–∞–º 3 –ª–∏–º–æ–Ω–∞", quote=False)
        sleep(0.5)
        update.message.reply_dice(emoji="üé∞", quote=False)
    elif res == 30:
        update.message.reply_text(f"–•–æ—Ä–æ—à –∫–æ—É–ø–∏—Ç—å, –ø–æ–≥–Ω–∞–ª–∏ –ª—É—á—à–µ –≤ –±–æ—É–ª–∏–Ω–≥!\n–ó–∞–æ–¥–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ö–æ—Ä–æ—à–æ —Ç–≤–æ–π –∫–æ—É–ø —É–º–µ–µ—Ç –≤—ã–±–∏–≤–∞—Ç—å –∫–µ–≥–ª–∏", quote=False)
        sleep(0.5)
        update.message.reply_dice(emoji="üé≥", quote=False)
    elif res == 31:
        update.message.reply_text(f"–•–æ—Ä–æ—à –∫–æ—É–ø–∏—Ç—å, –ø–æ–≥–Ω–∞–ª–∏ –ª—É—á—à–µ –≤ –¥–∞—Ä—Ç—Å!\n–ó–∞–æ–¥–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ö–æ—Ä–æ—à–æ —Ç–≤–æ–π –∫–æ—É–ø –ø–æ–ø–∞–¥–∞–µ—Ç –≤ —è–±–ª–æ—á–∫–æ!", quote=False)
        sleep(0.5)
        update.message.reply_dice(emoji="üéØ", quote=False)
    elif res == 32:
        update.message.reply_text(f"–•–æ—Ä–æ—à –∫–æ—É–ø–∏—Ç—å, –ø–æ–≥–Ω–∞–ª–∏ –ª—É—á—à–µ –≤ —Ñ—É—Ç–±–æ–ª!\n–ó–∞–æ–¥–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ö–æ—Ä–æ—à–æ —Ç–≤–æ–π –∫–æ—É–ø –∑–∞–ª–µ—Ç–∞–µ—Ç –≤ –≤–æ—Ä–æ—Ç–∞", quote=False)
        sleep(0.5)
        update.message.reply_dice(emoji="‚öΩ", quote=False)
    elif res == 33:
        update.message.reply_text(f"–•–æ—Ä–æ—à –∫–æ—É–ø–∏—Ç—å, –ø–æ–≥–Ω–∞–ª–∏ –ª—É—á—à–µ –≤ –±–∞—Å–∫–µ—Ç–±–æ–ª!\n–ó–∞–æ–¥–Ω–æ –ø–æ—Å–º–æ—Ç—Ä–∏–º –Ω–∞—Å–∫–æ–ª—å–∫–æ —Ö–æ—Ä–æ—à–æ —Ç–≤–æ–π –∫–æ—É–ø –∑–∞–ª–µ—Ç–∞–µ—Ç –≤ –∫–æ—Ä–∑–∏–Ω—É", quote=False)
        sleep(0.5)
        update.message.reply_dice(emoji="üèÄ", quote=False)



def subscribe(u: Updater):
    u.dispatcher.add_handler(CommandHandler("cope", random_cope))
    pass